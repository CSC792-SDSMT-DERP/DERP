class IParser:
    """ 
    Interface for the parser type

    The Parser has two jobs:
    * Combine grammars and load the resulting combined grammar, replacing the previous one
    * Parse text using the currently loaded grammar, returning a Lark AST

    It is recommended that IParser implementations use the Python Lark parser, as the interface specifies
    that the returned AST match the AST structure generated by the Lark parser
    """

    def __init__(self, *grammars):
        """
        Gives the parser multiple grammars to combine into a new
        grammar, which will be loaded as the active grammar for parsing

        raises GrammarMergeException -> combining the grammars produces an invalid grammar
        raises GrammarDefinitionException -> the combined grammar does not have a start symbol
        """
        pass

    def parse(self, text):
        """
        Parses a line of text using the grammar created in the most recent call to setSyntax,
        returns the AST produced by the Lark Parser

        raises TextParseException -> no Grammar has been set
        raises TextParseException -> the parser fails to parse the text
        """
        pass
